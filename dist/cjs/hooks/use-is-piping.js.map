{"version":3,"file":"use-is-piping.js","sources":["../../../src/hooks/use-is-piping.js"],"sourcesContent":["import React from 'react';\nimport usePipeline from './use-pipeline';\n\nexport default function useIsPiping() {\n  const pipeline = usePipeline();\n\n  if (pipeline === null) {\n    throw new Error('useIsPiping hook are used outside the scope of a pipeline');\n  }\n\n  const boxedValue = pipeline.isPiping;\n\n  const [value, setValue] = React.useState(boxedValue.get());\n\n  React.useEffect(() => {\n    const disposer = boxedValue.observe(() => {\n      const currentBoxedValue = boxedValue.get();\n\n      setValue(currentBoxedValue);\n    });\n\n    return () => {\n      disposer();\n    };\n  }, [boxedValue]);\n\n  function setValueOverride(val) {\n    boxedValue.set(val);\n  }\n\n  return [value, setValueOverride];\n}\n"],"names":["useIsPiping","pipeline","usePipeline","Error","boxedValue","isPiping","React","useState","get","value","setValue","useEffect","disposer","observe","currentBoxedValue","setValueOverride","val","set"],"mappings":";;;;;;;;;;AAGe,SAASA,WAAT,GAAuB;AACpC,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AAEA,MAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAM,IAAIE,KAAJ,CAAU,2DAAV,CAAN;AACD;;AAED,MAAMC,UAAU,GAAGH,QAAQ,CAACI,QAA5B;;AAPoC,wBASVC,yBAAK,CAACC,QAAN,CAAeH,UAAU,CAACI,GAAX,EAAf,CATU;AAAA;AAAA,MAS7BC,KAT6B;AAAA,MAStBC,QATsB;;AAWpCJ,EAAAA,yBAAK,CAACK,SAAN,CAAgB,YAAM;AACpB,QAAMC,QAAQ,GAAGR,UAAU,CAACS,OAAX,CAAmB,YAAM;AACxC,UAAMC,iBAAiB,GAAGV,UAAU,CAACI,GAAX,EAA1B;AAEAE,MAAAA,QAAQ,CAACI,iBAAD,CAAR;AACD,KAJgB,CAAjB;AAMA,WAAO,YAAM;AACXF,MAAAA,QAAQ;AACT,KAFD;AAGD,GAVD,EAUG,CAACR,UAAD,CAVH;;AAYA,WAASW,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BZ,IAAAA,UAAU,CAACa,GAAX,CAAeD,GAAf;AACD;;AAED,SAAO,CAACP,KAAD,EAAQM,gBAAR,CAAP;AACD;;;;"}
{"version":3,"file":"parallelPipelineTrigger.js","sources":["../../../src/utilities/parallelPipelineTrigger.js"],"sourcesContent":["export default function parallelPipelineTrigger (pipesOrder, pipes) {\n  return (payload = {}) => new Promise((resolve, reject) => {\n    const promises = []\n\n    if (pipesOrder.length > 0) {\n      pipesOrder.forEach((pipeUuid) => {\n        promises.push(\n          Promise.resolve(payload).then((p) => {\n            const pipe = pipes[pipeUuid]\n            return (typeof (pipe) === 'function') ? pipe(p) : pipe\n          })\n        )\n      })\n    }\n\n    Promise.all(promises)\n      .then((p) => {\n        resolve(p)\n      })\n      .catch((err) => {\n        reject(err)\n      })\n  })\n}\n"],"names":["parallelPipelineTrigger","pipesOrder","pipes","payload","Promise","resolve","reject","promises","length","forEach","pipeUuid","push","then","p","pipe","all","catch","err"],"mappings":"AAAe,SAASA,uBAAT,CAAkCC,UAAlC,EAA8CC,KAA9C,EAAqD;AAClE,EAAO,OAAA,YAAA;AAAA,IAACC,IAAAA,OAAD,uEAAW,EAAX,CAAA;AAAA,IAAA,OAAkB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,MAAMC,IAAAA,QAAQ,GAAG,EAAjB,CAAA;;AAEA,MAAA,IAAIN,UAAU,CAACO,MAAX,GAAoB,CAAxB,EAA2B;AACzBP,QAAAA,UAAU,CAACQ,OAAX,CAAmB,UAACC,QAAD,EAAc;AAC/BH,UAAAA,QAAQ,CAACI,IAAT,CACEP,OAAO,CAACC,OAAR,CAAgBF,OAAhB,CAAyBS,CAAAA,IAAzB,CAA8B,UAACC,CAAD,EAAO;AACnC,YAAA,IAAMC,IAAI,GAAGZ,KAAK,CAACQ,QAAD,CAAlB,CAAA;AACA,YAAQ,OAAA,OAAQI,IAAR,KAAkB,UAAnB,GAAiCA,IAAI,CAACD,CAAD,CAArC,GAA2CC,IAAlD,CAAA;AACD,WAHD,CADF,CAAA,CAAA;AAMD,SAPD,CAAA,CAAA;AAQD,OAAA;;AAEDV,MAAAA,OAAO,CAACW,GAAR,CAAYR,QAAZ,EACGK,IADH,CACQ,UAACC,CAAD,EAAO;AACXR,QAAAA,OAAO,CAACQ,CAAD,CAAP,CAAA;AACD,OAHH,CAIGG,CAAAA,KAJH,CAIS,UAACC,GAAD,EAAS;AACdX,QAAAA,MAAM,CAACW,GAAD,CAAN,CAAA;AACD,OANH,CAAA,CAAA;AAOD,KArBwB,CAAlB,CAAA;AAAA,GAAP,CAAA;AAsBD;;;;"}